blueprint:
  name: Auto fan speed
  description:
    "Temperature based Auto fan control.\n\n Fan Speed will be set when
    initially turned on by relating the ambient temperature to an equivalant speed
    setting. \nA time delay and a minimum percentage change is used to eliminate
    frequent speed changes.\n At the minimum temperature setting the fan will turn
    off. \n When the temperature rises above this minimum temperature setting, the
    fan will automatically turn back on."
  domain: automation
  input:
    co2_sensor:
      name: CO2 Sensor
      description: Enter your CO2 sensor.
      default: []
      selector:
        entity:
          domain:
            - sensor
          multiple: false
    iaq_sensor:
      name: Static IAQ Sensor
      description: Enter your static IAQ sensor.
      default: []
      selector:
        entity:
          domain:
            - sensor
          multiple: false
    humidity_sensor:
      name: Humidity Sensor
      description: Enter your Humidity sensor.
      default: []
      selector:
        entity:
          domain:
            - sensor
          multiple: false
    fan_switch:
      name: 💨 Fan
      description: The fan you wish to speed control.
      selector:
        entity:
          domain:
            - number
          multiple: false
    min_fan_speed:
      name: 💨 Minimum Fan Speed
      description: Set the minimum percentage speed when your fan is still on.
      default: 50
      selector:
        number:
          min: 0.0
          max: 400.0
          mode: slider
          step: 1.0
          unit_of_measurement: "m³/h"
    max_fan_speed:
      name: 💨 Maximum Fan Speed
      description: Set the maximum percentage speed for your fan.
      default: 400
      selector:
        number:
          min: 0.0
          max: 400.0
          mode: slider
          step: 1.0
          unit_of_measurement: "m³/h"
    min_co2:
      name: 📉 Minimum CO2
      description: What CO2 would you like the fan to run at minimum speed.
      default: 700
      selector:
        number:
          min: 0.0
          max: 3000.0
          step: 10.0
          mode: slider
    max_co2:
      name: 📈 Maximum CO2
      description: What CO2 would you like the fan to run at max fan speed.
      default: 1500
      selector:
        number:
          min: 0.0
          max: 3000.0
          step: 10.0
          mode: slider
    min_iaq:
      name: 📉 Minimum IAQ
      description: What IAQ would you like the fan to run at minimum speed.
      default: 50
      selector:
        number:
          min: 0.0
          max: 300.0
          step: 1.0
          mode: slider
    max_iaq:
      name: 📈 Maximum IAQ
      description: What IAQ would you like the fan to run at max fan speed.
      default: 150
      selector:
        number:
          min: 0.0
          max: 300.0
          step: 1.0
          mode: slider
    min_humidity:
      name: 📉 Minimum Humidity
      description: What Humidity would you like the fan to run at minimum speed.
      default: 60
      selector:
        number:
          min: 0.0
          max: 100.0
          step: 1.0
          mode: slider
    max_humidity:
      name: 📈 Maximum Humidity
      description: What Humidity would you like the fan to run at max fan speed.
      default: 80
      selector:
        number:
          min: 0.0
          max: 100.0
          step: 1.0
          mode: slider
    change_time:
      name: ⏱️ Change frequency delay
      description: How long to delay bewteen potential speed adjustments.
      default: 30
      selector:
        number:
          min: 1.0
          max: 120.0
          unit_of_measurement: minutes
          step: 1.0
          mode: slider
    change_threshold:
      name: Minimum change
      description: The minimum change (between current fan speed and set
        fan speed)
      default: 1
      selector:
        number:
          min: 0.0
          max: 400.0
          mode: slider
          step: 1.0
          unit_of_measurement: "m³/h"
    max_change:
      name: Maximum change
      description: The maximum change (between current fan speed and set
        fan speed)
      default: 50
      selector:
        number:
          min: 0.0
          max: 400.0
          mode: slider
          step: 1.0
          unit_of_measurement: "m³/h"
    blocker_entity:
      name: (OPTIONAL) Blocking entity
      description: If this entity's state is on, it will prevent the automation from running. E.g. sleepmode or away mode.
      default:
      selector:
        entity:
          multiple: false

  source_url: https://community.home-assistant.io/t/adaptive-fan-speed-control-based-on-temperature-and-speed-range/678152
variables:
  co2_sensor: !input co2_sensor
  max_co2: !input max_co2
  min_co2: !input min_co2

  iaq_sensor: !input iaq_sensor
  max_iaq: !input max_iaq
  min_iaq: !input min_iaq

  humidity_sensor: !input humidity_sensor
  max_humidity: !input max_humidity
  min_humidity: !input min_humidity

  fan_switch: !input fan_switch

  min_fan_speed: !input min_fan_speed
  max_fan_speed: !input max_fan_speed

  change_time: !input change_time
  max_change: !input max_change
  change_threshold: !input change_threshold
  blocker_entity: !input blocker_entity

  fan_speed: "{{ fan_switch | float(0)}}"

  current_co2: "{{ states(co2_sensor) | float(0)}}"
  co2_temp_range: "{{max_co2 | float(0)-min_co2 | float(0)}}"
  co2_fan_range: "{{max_fan_speed | float(0) - min_fan_speed | float(0)}}"
  co2_slope: "{{co2_fan_range | float(0)/co2_temp_range | float(0)}}"
  co2_initial_set_fan_speed: "{{ [[co2_slope|float(0) * (current_co2|float(0) - min_co2|float(0)) + min_fan_speed|float(0),  min_fan_speed] | max, max_fan_speed] | min}}"
  co2_adjusted_set_fan_speed: >
    co2_{% set diff = initial_set_fan_speed - fan_speed %}
    {% if diff > max_change|float(0) %}
      {{ fan_speed + max_change|float(0) }}
    {% elif diff < -max_change|float(0) %}
      {{ fan_speed - max_change|float(0) }}
    {% else %}
      co2_{{ initial_set_fan_speed }}
    {% endif %}

  current_iaq: "{{ states(iaq_sensor) | float(0)}}"
  iaq_temp_range: "{{max_iaq | float(0)-min_iaq | float(0)}}"
  iaq_fan_range: "{{max_fan_speed | float(0) - min_fan_speed | float(0)}}"
  iaq_slope: "{{iaq_fan_range | float(0)/iaq_temp_range | float(0)}}"
  iaq_initial_set_fan_speed: "{{ [[iaq_slope|float(0) * (current_iaq|float(0) - min_iaq|float(0)) + min_fan_speed|float(0),  min_fan_speed] | max, max_fan_speed] | min}}"
  iaq_adjusted_set_fan_speed: >
    iaq_{% set diff = initial_set_fan_speed - fan_speed %}
    {% if diff > max_change|float(0) %}
      {{ fan_speed + max_change|float(0) }}
    {% elif diff < -max_change|float(0) %}
      {{ fan_speed - max_change|float(0) }}
    {% else %}
      iaq_{{ initial_set_fan_speed }}
    {% endif %}

  current_humidity: "{{ states(humidity_sensor) | float(0)}}"
  humidity_temp_range: "{{max_humidity | float(0)-min_humidity | float(0)}}"
  humidity_fan_range: "{{max_fan_speed | float(0) - min_fan_speed | float(0)}}"
  humidity_slope: "{{humidity_fan_range | float(0)/humidity_temp_range | float(0)}}"
  humidity_initial_set_fan_speed: "{{ [[humidity_slope|float(0) * (current_humidity|float(0) - min_humidity|float(0)) + min_fan_speed|float(0),  min_fan_speed] | max, max_fan_speed] | min}}"
  humidity_adjusted_set_fan_speed: >
    humidity_{% set diff = initial_set_fan_speed - fan_speed %}
    {% if diff > max_change|float(0) %}
      {{ fan_speed + max_change|float(0) }}
    {% elif diff < -max_change|float(0) %}
      {{ fan_speed - max_change|float(0) }}
    {% else %}
      humidity_{{ initial_set_fan_speed }}
    {% endif %}

  set_fan_speed: "{{ [co2_adjusted_set_fan_speed, iaq_adjusted_set_fan_speed, humidity_adjusted_set_fan_speed] | max }}"
  speed_diff: "{{(fan_speed | int - set_fan_speed | int)|abs}}"
trigger:
  - platform: state
    id: co2_state_change
    entity_id:
      - !input co2_sensor
condition:
  - condition: template
    alias: Check for blocker entity
    value_template: "{{ (blocker_entity is none) or (states(blocker_entity) == 'off') }}"

action:
  - choose:
      - conditions:
          - condition: template
            alias: Is the percentage change great enough?
            value_template: "{{ speed_diff | int > change_threshold | int }}"
        sequence:
          - service: number.set_value
            target:
              entity_id: !input fan_switch
            data:
              value: "{{set_fan_speed | int}}"
          - delay:
              minutes: !input change_time
mode: single
