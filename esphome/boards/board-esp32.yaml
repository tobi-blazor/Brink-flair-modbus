### ESP32 used is a MH-ET-LIVE, also known as Wemos D32 Mini
### The modbus TTL to RS485 interface used is a XY-017  (RS3485). No flow control needed and 3.3V powersupply

esp32:
  board: mhetesp32minikit
  framework:
    type: arduino

# uart for modbus rtu
uart:
  id: mod_bus
  baud_rate: 19200
  stop_bits: 1
  tx_pin: 16
  rx_pin: 17
  parity: even

# i2c for extra sensor
i2c:
  sda: 21
  scl: 22
  scan: true
  id: bus_a

# i2c for extra sensor
i2c:
  sda: 4
  scl: 5
  scan: true
  id: bus_b

# i2c for extra sensor
i2c:
  sda: 18
  scl: 19
  scan: true
  id: bus_c

# i2c for extra sensor
i2c:
  sda: 23
  scl: 25
  scan: true
  id: bus_d

# i2c for extra sensor
i2c:
  sda: 26
  scl: 27
  scan: true
  id: bus_e

  

# Enable/Disable logging
logger:
  logs:
    modbus_controller.sensor: WARN
    modbus_controller.output: WARN
    modbus.number: WARN
    esp32.preferences: WARN
    sensor: WARN
    text_sensor: WARN
    dht.sensor: WARN
    switch: WARN
    button: WARN
    number: WARN
  # baud_rate: 0  # <--- super important! for ESP8266

wifi:
  ap:
    ssid: "${name}"
    password: "configesp"

captive_portal:
# Enable Web server.
# web_server:
#  port: 80
